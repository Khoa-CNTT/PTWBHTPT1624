const express = require('express');
const ProductController = require('../../controllers/product.controller');
const asyncHandle = require('../../helper/asyncHandle');
const { adminAuthentication, restrictTo } = require('../../middlewares/auth.admin.middleware');
const PERMISSIONS = require('../../config/permissions');
const { userAuthentication } = require('../../middlewares/auth.user.middleware');

const router = express.Router();

/* ================================
   üìå API D√†nh cho Ng∆∞·ªùi D√πng (Kh√¥ng c·∫ßn ƒëƒÉng nh·∫≠p)
   ================================ */
// üîç T√¨m ki·∫øm s·∫£n ph·∫©m theo t·ª´ kh√≥a
router.post('/search/search-image', asyncHandle(ProductController.searchProductByImage));
router.get('/search/:keySearch', asyncHandle(ProductController.getListSearchProduct));
// üì¶ L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m
router.get('/all', asyncHandle(ProductController.getAllProducts));
// üîç L·∫•y th√¥ng tin s·∫£n ph·∫©m theo ID
router.get('/:id/detail', asyncHandle(ProductController.getProductById));
// üåü L·∫•y danh s√°ch s·∫£n ph·∫©m n·ªïi b·∫≠t
router.get('/featured', asyncHandle(ProductController.getFeaturedProducts));
// ‚ö° L·∫•y danh s√°ch s·∫£n ph·∫©m gi·∫£m gi√° s·ªëc
router.get('/flash-sale', asyncHandle(ProductController.getFlashSaleProducts));
// üÜï L·∫•y danh s√°ch s·∫£n ph·∫©m m·ªõi nh·∫•t
router.get('/new-product', asyncHandle(ProductController.getNewProducts));
// üîÑ L·∫•y danh s√°ch s·∫£n ph·∫©m t∆∞∆°ng t·ª± theo danh m·ª•c
router.get('/:id/similar', asyncHandle(ProductController.getSimilarProducts));
router.get('/suggestion/:keySearch', asyncHandle(ProductController.getProductSuggestions));
router.get('/top-viewed', asyncHandle(ProductController.getTopViewedProduct));
//S·∫£n ph·∫©m b·∫°n quan t√¢m
router.post('/track-view', [userAuthentication], asyncHandle(ProductController.trackCategoryView));
router.get('/recommendations', [userAuthentication], asyncHandle(ProductController.recommendByTopCategories));
/* ================================
   üõ°Ô∏è API D√†nh cho Admin (Qu·∫£n l√Ω S·∫£n Ph·∫©m)
   ================================ */
router.use(adminAuthentication); // ‚úÖ X√°c th·ª±c ng∆∞·ªùi d√πng
router.use(restrictTo(PERMISSIONS.PRODUCT_MANAGE)); //
router.get('/all-products', asyncHandle(ProductController.getAllProductsByAdmin));
// ‚ûï Th√™m s·∫£n ph·∫©m m·ªõi (bao g·ªìm th√¥ng tin t·ªìn kho)
router.post('/add', asyncHandle(ProductController.createProduct));

router.get('/offline-orders/scan-product', asyncHandle(ProductController.ScanProduct));
// ‚úèÔ∏è C·∫≠p nh·∫≠t s·∫£n ph·∫©m
router.put('/:id/update', asyncHandle(ProductController.updateProduct));

// ‚ùå X√≥a s·∫£n ph·∫©m
router.delete('/:id/delete', asyncHandle(ProductController.deleteProduct));

// API l·∫•y s·∫£n ph·∫©m theo tr·∫°ng th√°i h·∫°n s·ª≠ d·ª•ng
router.get('/expiry-status/:status', asyncHandle(ProductController.getProductsByExpiryStatus));

module.exports = router;
