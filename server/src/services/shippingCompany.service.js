"use strict";

const { BadRequestError, NotFoundError } = require("../core/error.response");
const ShippingCompany = require("../models/shippingCompany.model.js");

class ShippingCompanyService {
  // T·∫°o c√¥ng ty v·∫≠n chuy·ªÉn m·ªõi
  static async createShippingCompany(payload) {
    if (!payload.sc_name || !payload.sc_phone || !payload.sc_shipping_price) {
      throw new BadRequestError("Thi·∫øu th√¥ng tin b·∫Øt bu·ªôc!");
    }
    return await ShippingCompany.create(payload);
  }

  // L·∫•y danh s√°ch t·∫•t c·∫£ c√¥ng ty v·∫≠n chuy·ªÉn
  static async getAllShippingCompanies() {
    return await ShippingCompany.find();
  }

  // L·∫•y c√¥ng ty v·∫≠n chuy·ªÉn theo ID
  static async getShippingCompanyById(id) {
    const shippingCompany = await ShippingCompany.findById(id);
    if (!shippingCompany) throw new NotFoundError("C√¥ng ty v·∫≠n chuy·ªÉn kh√¥ng t·ªìn t·∫°i!");
    return shippingCompany;
  }

  // C·∫≠p nh·∫≠t c√¥ng ty v·∫≠n chuy·ªÉn theo ID
  static async updateShippingCompany(id, payload) {
    const updatedShippingCompany = await ShippingCompany.findByIdAndUpdate(id, payload, { new: true });
    if (!updatedShippingCompany) throw new NotFoundError("C√¥ng ty v·∫≠n chuy·ªÉn kh√¥ng t·ªìn t·∫°i!");
    return updatedShippingCompany;
  }

  // X√≥a c√¥ng ty v·∫≠n chuy·ªÉn theo ID
  static async deleteShippingCompany(id) {
    const shippingCompany = await ShippingCompany.findByIdAndDelete(id);
    if (!shippingCompany) throw new NotFoundError("C√¥ng ty v·∫≠n chuy·ªÉn kh√¥ng t·ªìn t·∫°i!");
    return shippingCompany;
  }

  // üîπ T√¨m ki·∫øm c√¥ng ty v·∫≠n chuy·ªÉn theo t√™n
  static async searchShippingCompaniesByName(name) {
    if (!name) throw new BadRequestError("Vui l√≤ng nh·∫≠p t√™n c√¥ng ty ƒë·ªÉ t√¨m ki·∫øm");

    const companies = await ShippingCompany.find({
      sc_name: { $regex: name, $options: "i" } // T√¨m ki·∫øm kh√¥ng ph√¢n bi·ªát hoa th∆∞·ªùng
    });

    if (companies.length === 0) throw new NotFoundError("Kh√¥ng t√¨m th·∫•y c√¥ng ty n√†o");

    return companies;
  }
}

module.exports = ShippingCompanyService;
