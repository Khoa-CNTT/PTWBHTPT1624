const Brand = require("../models/brand.model");
const { BadRequestError, NotFoundError } = require("../core/error.response");

const BrandService = {
    // Táº¡o thÆ°Æ¡ng hiá»‡u má»›i
    createBrand: async (payload) => {
        if (!payload.brand_name || !payload.brand_thumb || !payload.brand_banner_image) {
            throw new BadRequestError("Thiáº¿u thÃ´ng tin báº¯t buá»™c!");
        }
        return await Brand.create(payload);
    },

    // Láº¥y danh sÃ¡ch táº¥t cáº£ thÆ°Æ¡ng hiá»‡u
    getAllBrands: async () => {
        return await Brand.find();
    },

    // Láº¥y thÆ°Æ¡ng hiá»‡u theo ID
    getBrandById: async (id) => {
        const brand = await Brand.findById(id);
        if (!brand) throw new NotFoundError("ThÆ°Æ¡ng hiá»‡u khÃ´ng tá»“n táº¡i!");
        return brand;
    },

    // Cáº­p nháº­t thÆ°Æ¡ng hiá»‡u theo ID
    updateBrand: async (id, payload) => {
        const updatedBrand = await Brand.findByIdAndUpdate(id, payload, { new: true });
        if (!updatedBrand) throw new NotFoundError("ThÆ°Æ¡ng hiá»‡u khÃ´ng tá»“n táº¡i!");
        return updatedBrand;
    },

    // XÃ³a thÆ°Æ¡ng hiá»‡u theo ID
    deleteBrand: async (id) => {
        const brand = await Brand.findByIdAndDelete(id);
        if (!brand) throw new NotFoundError("ThÆ°Æ¡ng hiá»‡u khÃ´ng tá»“n táº¡i!");
        return brand;
    },

    // ðŸ”¹ TÃ¬m kiáº¿m thÆ°Æ¡ng hiá»‡u theo tÃªn
    searchBrandByName: async (name) => {
        const brands = await Brand.find({ brand_name: { $regex: name, $options: "i" } });
        return brands;
    }
};

module.exports = BrandService;
